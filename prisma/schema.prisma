// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  name          String?
  password      String
  role          Role      @default(USER)
  profileImage  String?   // profile picture (URL to Cloudinary, S3, etc.)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  blogs         Blog[]    @relation("author_blogs")
  projects      Project[]
}

// prisma/schema.prisma
model Blog {
  id            String    @id @default(uuid())
  title         String
  slug          String    @unique
  summary       String
  content       String    // HTML/Markdown
  published     Boolean   @default(false)
  views         Int       @default(0)
  tags          String[]

  thumbnail     String?   // main thumbnail image
  images        String[]  @default([]) 

  author        User?     @relation(fields: [authorId], references: [id], name: "author_blogs")
  authorId      String?

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Project {
  id          String    @id @default(uuid())
  title       String
  description String
  image       String?   
  liveUrl     String?
  repoUrl     String?
  tags        String[]  @default([])
  featured    Boolean   @default(false) 
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  owner       User?     @relation(fields: [ownerId], references: [id])
  ownerId     String?
}

model Skill {
  id        String   @id @default(uuid())
  name      String
  level     Int      @default(0)
  category  String   
  color     String?  
  order     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model About {
  id          String   @id @default(uuid())
  fullName    String
  title       String   
  bio         String
  shortBio    String?  
  email       String?
  phone       String?
  location    String?
  imageUrl    String?
  resumeUrl   String?  
  status      String?  
  stats       Json?    
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([email])
}

enum Role {
  USER
  ADMIN
}
